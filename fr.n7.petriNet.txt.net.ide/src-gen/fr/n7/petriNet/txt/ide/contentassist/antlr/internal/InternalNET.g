/*
 * generated by Xtext 2.29.0
 */
grammar InternalNET;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.n7.petriNet.txt.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.n7.petriNet.txt.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.n7.petriNet.txt.services.NETGrammarAccess;

}
@parser::members {
	private NETGrammarAccess grammarAccess;

	public void setGrammarAccess(NETGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleNetwork
entryRuleNetwork
:
{ before(grammarAccess.getNetworkRule()); }
	 ruleNetwork
{ after(grammarAccess.getNetworkRule()); } 
	 EOF 
;

// Rule Network
ruleNetwork 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNetworkAccess().getGroup()); }
		(rule__Network__Group__0)
		{ after(grammarAccess.getNetworkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlace
entryRulePlace
:
{ before(grammarAccess.getPlaceRule()); }
	 rulePlace
{ after(grammarAccess.getPlaceRule()); } 
	 EOF 
;

// Rule Place
rulePlace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlaceAccess().getGroup()); }
		(rule__Place__Group__0)
		{ after(grammarAccess.getPlaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransition
entryRuleTransition
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionAccess().getGroup()); }
		(rule__Transition__Group__0)
		{ after(grammarAccess.getTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArc
entryRuleArc
:
{ before(grammarAccess.getArcRule()); }
	 ruleArc
{ after(grammarAccess.getArcRule()); } 
	 EOF 
;

// Rule Arc
ruleArc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArcAccess().getAlternatives()); }
		(rule__Arc__Alternatives)
		{ after(grammarAccess.getArcAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArc_Impl
entryRuleArc_Impl
:
{ before(grammarAccess.getArc_ImplRule()); }
	 ruleArc_Impl
{ after(grammarAccess.getArc_ImplRule()); } 
	 EOF 
;

// Rule Arc_Impl
ruleArc_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArc_ImplAccess().getGroup()); }
		(rule__Arc_Impl__Group__0)
		{ after(grammarAccess.getArc_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReadArc
entryRuleReadArc
:
{ before(grammarAccess.getReadArcRule()); }
	 ruleReadArc
{ after(grammarAccess.getReadArcRule()); } 
	 EOF 
;

// Rule ReadArc
ruleReadArc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReadArcAccess().getGroup()); }
		(rule__ReadArc__Group__0)
		{ after(grammarAccess.getReadArcAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getPlaceParserRuleCall_0()); }
		rulePlace
		{ after(grammarAccess.getElementAccess().getPlaceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getTransitionParserRuleCall_1()); }
		ruleTransition
		{ after(grammarAccess.getElementAccess().getTransitionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArcAccess().getGroup_0()); }
		(rule__Arc__Group_0__0)
		{ after(grammarAccess.getArcAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getArcAccess().getReadArcParserRuleCall_1()); }
		ruleReadArc
		{ after(grammarAccess.getArcAccess().getReadArcParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Network__Group__0__Impl
	rule__Network__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkAccess().getNetworkAction_0()); }
	()
	{ after(grammarAccess.getNetworkAccess().getNetworkAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Network__Group__1__Impl
	rule__Network__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkAccess().getNetKeyword_1()); }
	'net'
	{ after(grammarAccess.getNetworkAccess().getNetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Network__Group__2__Impl
	rule__Network__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkAccess().getNameAssignment_2()); }
	(rule__Network__NameAssignment_2)
	{ after(grammarAccess.getNetworkAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Network__Group__3__Impl
	rule__Network__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getNetworkAccess().getElementsAssignment_3()); }
		(rule__Network__ElementsAssignment_3)
		{ after(grammarAccess.getNetworkAccess().getElementsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getNetworkAccess().getElementsAssignment_3()); }
		(rule__Network__ElementsAssignment_3)*
		{ after(grammarAccess.getNetworkAccess().getElementsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Network__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getNetworkAccess().getArcsAssignment_4()); }
		(rule__Network__ArcsAssignment_4)
		{ after(grammarAccess.getNetworkAccess().getArcsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getNetworkAccess().getArcsAssignment_4()); }
		(rule__Network__ArcsAssignment_4)*
		{ after(grammarAccess.getNetworkAccess().getArcsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Place__Group__0__Impl
	rule__Place__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceAccess().getPlKeyword_0()); }
	'pl'
	{ after(grammarAccess.getPlaceAccess().getPlKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Place__Group__1__Impl
	rule__Place__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceAccess().getNameAssignment_1()); }
	(rule__Place__NameAssignment_1)
	{ after(grammarAccess.getPlaceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Place__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceAccess().getGroup_2()); }
	(rule__Place__Group_2__0)?
	{ after(grammarAccess.getPlaceAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Place__Group_2__0__Impl
	rule__Place__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getPlaceAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Place__Group_2__1__Impl
	rule__Place__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceAccess().getTokensAssignment_2_1()); }
	(rule__Place__TokensAssignment_2_1)
	{ after(grammarAccess.getPlaceAccess().getTokensAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Place__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getPlaceAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getTransitionAction_0()); }
	()
	{ after(grammarAccess.getTransitionAccess().getTransitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getTrKeyword_1()); }
	'tr'
	{ after(grammarAccess.getTransitionAccess().getTrKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getNameAssignment_2()); }
	(rule__Transition__NameAssignment_2)
	{ after(grammarAccess.getTransitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arc__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arc__Group_0__0__Impl
	rule__Arc__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArcAccess().getArcKeyword_0_0()); }
	'arc'
	{ after(grammarAccess.getArcAccess().getArcKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arc__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArcAccess().getArc_ImplParserRuleCall_0_1()); }
	ruleArc_Impl
	{ after(grammarAccess.getArcAccess().getArc_ImplParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arc_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arc_Impl__Group__0__Impl
	rule__Arc_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArc_ImplAccess().getPredecessorAssignment_0()); }
	(rule__Arc_Impl__PredecessorAssignment_0)
	{ after(grammarAccess.getArc_ImplAccess().getPredecessorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arc_Impl__Group__1__Impl
	rule__Arc_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArc_ImplAccess().getHyphenMinusKeyword_1()); }
	'-'
	{ after(grammarAccess.getArc_ImplAccess().getHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arc_Impl__Group__2__Impl
	rule__Arc_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArc_ImplAccess().getGroup_2()); }
	(rule__Arc_Impl__Group_2__0)?
	{ after(grammarAccess.getArc_ImplAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arc_Impl__Group__3__Impl
	rule__Arc_Impl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArc_ImplAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getArc_ImplAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arc_Impl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArc_ImplAccess().getSuccessorAssignment_4()); }
	(rule__Arc_Impl__SuccessorAssignment_4)
	{ after(grammarAccess.getArc_ImplAccess().getSuccessorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arc_Impl__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arc_Impl__Group_2__0__Impl
	rule__Arc_Impl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArc_ImplAccess().getWeightAssignment_2_0()); }
	(rule__Arc_Impl__WeightAssignment_2_0)
	{ after(grammarAccess.getArc_ImplAccess().getWeightAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arc_Impl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArc_ImplAccess().getHyphenMinusKeyword_2_1()); }
	'-'
	{ after(grammarAccess.getArc_ImplAccess().getHyphenMinusKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReadArc__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadArc__Group__0__Impl
	rule__ReadArc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadArc__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadArcAccess().getPredecessorAssignment_0()); }
	(rule__ReadArc__PredecessorAssignment_0)
	{ after(grammarAccess.getReadArcAccess().getPredecessorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadArc__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadArc__Group__1__Impl
	rule__ReadArc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadArc__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadArcAccess().getHyphenMinusKeyword_1()); }
	'-'
	{ after(grammarAccess.getReadArcAccess().getHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadArc__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadArc__Group__2__Impl
	rule__ReadArc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadArc__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadArcAccess().getWeightAssignment_2()); }
	(rule__ReadArc__WeightAssignment_2)?
	{ after(grammarAccess.getReadArcAccess().getWeightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadArc__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadArc__Group__3__Impl
	rule__ReadArc__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadArc__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadArcAccess().getQuestionMarkGreaterThanSignKeyword_3()); }
	'?>'
	{ after(grammarAccess.getReadArcAccess().getQuestionMarkGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadArc__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadArc__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadArc__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadArcAccess().getSuccessorAssignment_4()); }
	(rule__ReadArc__SuccessorAssignment_4)
	{ after(grammarAccess.getReadArcAccess().getSuccessorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Network__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getNetworkAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkAccess().getElementsElementParserRuleCall_3_0()); }
		ruleElement
		{ after(grammarAccess.getNetworkAccess().getElementsElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__ArcsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkAccess().getArcsArcParserRuleCall_4_0()); }
		ruleArc
		{ after(grammarAccess.getNetworkAccess().getArcsArcParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlaceAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getPlaceAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__TokensAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlaceAccess().getTokensEIntParserRuleCall_2_1_0()); }
		ruleEInt
		{ after(grammarAccess.getPlaceAccess().getTokensEIntParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getTransitionAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__PredecessorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArc_ImplAccess().getPredecessorElementCrossReference_0_0()); }
		(
			{ before(grammarAccess.getArc_ImplAccess().getPredecessorElementEStringParserRuleCall_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getArc_ImplAccess().getPredecessorElementEStringParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getArc_ImplAccess().getPredecessorElementCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__WeightAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArc_ImplAccess().getWeightEIntParserRuleCall_2_0_0()); }
		ruleEInt
		{ after(grammarAccess.getArc_ImplAccess().getWeightEIntParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc_Impl__SuccessorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArc_ImplAccess().getSuccessorElementCrossReference_4_0()); }
		(
			{ before(grammarAccess.getArc_ImplAccess().getSuccessorElementEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getArc_ImplAccess().getSuccessorElementEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getArc_ImplAccess().getSuccessorElementCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadArc__PredecessorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadArcAccess().getPredecessorElementCrossReference_0_0()); }
		(
			{ before(grammarAccess.getReadArcAccess().getPredecessorElementEStringParserRuleCall_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getReadArcAccess().getPredecessorElementEStringParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getReadArcAccess().getPredecessorElementCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadArc__WeightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadArcAccess().getWeightEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getReadArcAccess().getWeightEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadArc__SuccessorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadArcAccess().getSuccessorElementCrossReference_4_0()); }
		(
			{ before(grammarAccess.getReadArcAccess().getSuccessorElementEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getReadArcAccess().getSuccessorElementEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getReadArcAccess().getSuccessorElementCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
